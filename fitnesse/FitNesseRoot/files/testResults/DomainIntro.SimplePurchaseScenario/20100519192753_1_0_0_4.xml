<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20100303</FitNesseVersion>
  <rootPath>SimplePurchaseScenario</rootPath>
    <result>
    <counts>
      <right>1</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>4</exceptions>
    </counts>
    <content><![CDATA[<br/><div class="setup">
	<div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div>
	<a href="javascript:toggleCollapsable('-1900332366252234183');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img-1900332366252234183"/>
	</a>
&nbsp;<span class="meta">Set Up: <a href="DomainIntro.SetUp">.DomainIntro.SetUp</a> <a href="DomainIntro.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="-1900332366252234183"><table border="1" cellspacing="0" _TABLENUMBER=7828946646874760691>
<tr><td>import</td>
</tr>
<tr><td>org.givwenzen</td>
</tr>
</table>
<br/><table border="1" cellspacing="0" _TABLENUMBER=2097539981865990140>
<tr class="hidden"><td colspan="2">script</td>
</tr>
<tr><td>start</td>
<td><span class="pass">giv wen zen for slim</span></td>
</tr>
</table>
</div>
</div>
<div id="test_exceptions1"><H3> <span class="fail">Exceptions</span></H3><br/><a name="scriptTable_2_3"/><b></b><div class="collapse_rim"><div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div><a href="javascript:toggleCollapsable('-2099865167268646641');"><img src="/files/images/collapsableClosed.gif" class="left" id="img-2099865167268646641"/></a>&nbsp;<span class="meta">scriptTable_2_3 </span>

	<div class="hidden" id="-2099865167268646641"><pre>__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'the step in the step class created by the custom instantiation strategy is executed successfully'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("the step in the step class created by the custom instantiation strategy is executed successfully")
    public void domainStep() {
      // TODO implement step
    }  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

</pre></div>
</div><a name="scriptTable_2_1"/><b></b><div class="collapse_rim"><div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div><a href="javascript:toggleCollapsable('5150312941172751829');"><img src="/files/images/collapsableClosed.gif" class="left" id="img5150312941172751829"/></a>&nbsp;<span class="meta">scriptTable_2_1 </span>

	<div class="hidden" id="5150312941172751829"><pre>__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'a step class that is created by the custom instantiation strategy'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("a step class that is created by the custom instantiation strategy")
    public void domainStep() {
      // TODO implement step
    }  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

</pre></div>
</div><a name="scriptTable_2_2"/><b></b><div class="collapse_rim"><div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div><a href="javascript:toggleCollapsable('3184056747725328212');"><img src="/files/images/collapsableClosed.gif" class="left" id="img3184056747725328212"/></a>&nbsp;<span class="meta">scriptTable_2_2 </span>

	<div class="hidden" id="3184056747725328212"><pre>__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'a step is called that exists in the step class created by the custom instantiation strategy'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("a step is called that exists in the step class created by the custom instantiation strategy")
    public void domainStep() {
      // TODO implement step
    }  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

</pre></div>
</div><a name="scriptTable_2_0"/><b></b><div class="collapse_rim"><div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div><a href="javascript:toggleCollapsable('4842953176521506735');"><img src="/files/images/collapsableClosed.gif" class="left" id="img4842953176521506735"/></a>&nbsp;<span class="meta">scriptTable_2_0 </span>

	<div class="hidden" id="4842953176521506735"><pre>__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'a custom instantiation strategy for creating custom step classes'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("a custom instantiation strategy for creating custom step classes")
    public void domainStep() {
      // TODO implement step
    }  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

</pre></div>
</div></div><hr/><table border="1" cellspacing="0" _TABLENUMBER=1147493349593539704>
<tr class="hidden"><td colspan="2">script</td>
</tr>
<tr><td>given</td>
<td>a custom instantiation strategy for creating custom step classes</td>
</tr>
<tr><td>and</td>
<td>a step class that is created by the custom instantiation strategy</td>
</tr>
<tr><td>when</td>
<td>a step is called that exists in the step class created by the custom instantiation strategy</td>
</tr>
<tr><td>then</td>
<td>the step in the step class created by the custom instantiation strategy is executed successfully</td>
</tr>
</table>
]]></content>
    <relativePageName>SimplePurchaseScenario</relativePageName>
    
        <tables>
            <table>
        <name>import_0</name>
                <row>
                    <col><![CDATA[import]]></col>
          
        </row>
                <row>
                    <col><![CDATA[org.givwenzen]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scriptTable_1</name>
                <row>
                    <col><![CDATA[script]]></col>
          
        </row>
                <row>
                    <col><![CDATA[start]]></col>
                    <col><![CDATA[pass(giv wen zen for slim)]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scriptTable_2</name>
                <row>
                    <col><![CDATA[script]]></col>
          
        </row>
                <row>
                    <col><![CDATA[given]]></col>
                    <col><![CDATA[a custom instantiation strategy for creating custom step classes]]></col>
          
        </row>
                <row>
                    <col><![CDATA[and]]></col>
                    <col><![CDATA[a step class that is created by the custom instantiation strategy]]></col>
          
        </row>
                <row>
                    <col><![CDATA[when]]></col>
                    <col><![CDATA[a step is called that exists in the step class created by the custom instantiation strategy]]></col>
          
        </row>
                <row>
                    <col><![CDATA[then]]></col>
                    <col><![CDATA[the step in the step class created by the custom instantiation strategy is executed successfully]]></col>
          
        </row>
        
      </table>
      
    </tables>
    
    
    <instructions>
            <instructionResult>
        <instruction><![CDATA[[import_0_0, import, org.givwenzen]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_1_0, make, scriptTableActor, GivWenZenForSlim]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
                <expectation>
          <status>right</status>
          <instructionId>scriptTable_1_0</instructionId>
          <col>1</col>
          <row>1</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[OK]]></actual>
                              <expected><![CDATA[giv wen zen for slim]]></expected>
                              <evaluationMessage><![CDATA[pass(giv wen zen for slim)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_2_0, call, scriptTableActor, given, a custom instantiation strategy for creating custom step classes]]]></instruction>
        <slimResult><![CDATA[Exception: <a href=#scriptTable_2_0>scriptTable_2_0</a>]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_0</instructionId>
          <col>1</col>
          <row>1</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[Exception: <a href=#scriptTable_2_0>scriptTable_2_0</a>]]></actual>
                              <expected><![CDATA[given]]></expected>
                              <evaluationMessage><![CDATA[given]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_2_1, call, scriptTableActor, and, a step class that is created by the custom instantiation strategy]]]></instruction>
        <slimResult><![CDATA[Exception: <a href=#scriptTable_2_1>scriptTable_2_1</a>]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_1</instructionId>
          <col>1</col>
          <row>2</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_1</instructionId>
          <col>0</col>
          <row>2</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[Exception: <a href=#scriptTable_2_1>scriptTable_2_1</a>]]></actual>
                              <expected><![CDATA[and]]></expected>
                              <evaluationMessage><![CDATA[and]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_2_2, call, scriptTableActor, when, a step is called that exists in the step class created by the custom instantiation strategy]]]></instruction>
        <slimResult><![CDATA[Exception: <a href=#scriptTable_2_2>scriptTable_2_2</a>]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_2</instructionId>
          <col>1</col>
          <row>3</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_2</instructionId>
          <col>0</col>
          <row>3</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[Exception: <a href=#scriptTable_2_2>scriptTable_2_2</a>]]></actual>
                              <expected><![CDATA[when]]></expected>
                              <evaluationMessage><![CDATA[when]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_2_3, call, scriptTableActor, then, the step in the step class created by the custom instantiation strategy is executed successfully]]]></instruction>
        <slimResult><![CDATA[Exception: <a href=#scriptTable_2_3>scriptTable_2_3</a>]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_3</instructionId>
          <col>1</col>
          <row>4</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_3</instructionId>
          <col>0</col>
          <row>4</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[Exception: <a href=#scriptTable_2_3>scriptTable_2_3</a>]]></actual>
                              <expected><![CDATA[then]]></expected>
                              <evaluationMessage><![CDATA[then]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
      
    </instructions>
    
  </result>
  
  
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  
</testResults>

