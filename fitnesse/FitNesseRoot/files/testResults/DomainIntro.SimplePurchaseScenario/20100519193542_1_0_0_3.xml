<?xml version="1.0"?>
<testResults>
  <FitNesseVersion>v20100303</FitNesseVersion>
  <rootPath>SimplePurchaseScenario</rootPath>
    <result>
    <counts>
      <right>1</right>
      <wrong>0</wrong>
      <ignores>0</ignores>
      <exceptions>3</exceptions>
    </counts>
    <content><![CDATA[<br/><div class="setup">
	<div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div>
	<a href="javascript:toggleCollapsable('-9139548437803749753');">
		<img src="/files/images/collapsableClosed.gif" class="left" id="img-9139548437803749753"/>
	</a>
&nbsp;<span class="meta">Set Up: <a href="DomainIntro.SetUp">.DomainIntro.SetUp</a> <a href="DomainIntro.SetUp?edit&amp;redirectToReferer=true&amp;redirectAction=">(edit)</a></span>
	<div class="hidden" id="-9139548437803749753"><table border="1" cellspacing="0" _TABLENUMBER=969047280299193367>
<tr><td>import</td>
</tr>
<tr><td>org.givwenzen</td>
</tr>
</table>
<br/><table border="1" cellspacing="0" _TABLENUMBER=7881650884391248329>
<tr class="hidden"><td colspan="2">script</td>
</tr>
<tr><td>start</td>
<td><span class="pass">giv wen zen for slim</span></td>
</tr>
</table>
</div>
</div>
<div id="test_exceptions1"><H3> <span class="fail">Exceptions</span></H3><br/><a name="scriptTable_2_1"/><b></b><div class="collapse_rim"><div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div><a href="javascript:toggleCollapsable('-6055765623514035069');"><img src="/files/images/collapsableClosed.gif" class="left" id="img-6055765623514035069"/></a>&nbsp;<span class="meta">scriptTable_2_1 </span>

	<div class="hidden" id="-6055765623514035069"><pre>__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'an order for 8 pen products are placed with the option of shipping all at once'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("an order for 8 pen products are placed with the option of shipping all at once")
    public void domainStep() {
      // TODO implement step
    }  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

</pre></div>
</div><a name="scriptTable_2_2"/><b></b><div class="collapse_rim"><div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div><a href="javascript:toggleCollapsable('2323924931558562859');"><img src="/files/images/collapsableClosed.gif" class="left" id="img2323924931558562859"/></a>&nbsp;<span class="meta">scriptTable_2_2 </span>

	<div class="hidden" id="2323924931558562859"><pre>__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'inventory will have 0 pen products'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("inventory will have 0 pen products")
    public void domainStep() {
      // TODO implement step
    }  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

</pre></div>
</div><a name="scriptTable_2_0"/><b></b><div class="collapse_rim"><div style="float: right;" class="meta"><a href="javascript:expandAll();">Expand All</a> | <a href="javascript:collapseAll();">Collapse All</a></div><a href="javascript:toggleCollapsable('8579834236905488361');"><img src="/files/images/collapsableClosed.gif" class="left" id="img8579834236905488361"/></a>&nbsp;<span class="meta">scriptTable_2_0 </span>

	<div class="hidden" id="8579834236905488361"><pre>__EXCEPTION__:org.givwenzen.DomainStepNotFoundException: 
You need a step class with an annotated method matching this pattern: 'inventory has 8 pen products'
The step class should be placed in the package or sub-package of bdd.steps or your custom package if defined.
Example:
  @DomainSteps
  public class StepClass {
    @DomainStep("inventory has 8 pen products")
    public void domainStep() {
      // TODO implement step
    }  }
Typical causes of this error are:
  * StepClass is missing the @DomainSteps annotation
  * StepMethod is missing the @DomainStep annotation
  * The step method annotation has a regular expression that is not matching the current test step

</pre></div>
</div></div><hr/><table border="1" cellspacing="0" _TABLENUMBER=6828761178751607265>
<tr class="hidden"><td colspan="2">script</td>
</tr>
<tr><td>given</td>
<td>inventory has 8 pen products</td>
</tr>
<tr><td>when</td>
<td>an order for 8 pen products are placed with the option of shipping all at once</td>
</tr>
<tr><td>then</td>
<td>inventory will have 0 pen products</td>
</tr>
</table>
]]></content>
    <relativePageName>SimplePurchaseScenario</relativePageName>
    
        <tables>
            <table>
        <name>import_0</name>
                <row>
                    <col><![CDATA[import]]></col>
          
        </row>
                <row>
                    <col><![CDATA[org.givwenzen]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scriptTable_1</name>
                <row>
                    <col><![CDATA[script]]></col>
          
        </row>
                <row>
                    <col><![CDATA[start]]></col>
                    <col><![CDATA[pass(giv wen zen for slim)]]></col>
          
        </row>
        
      </table>
            <table>
        <name>scriptTable_2</name>
                <row>
                    <col><![CDATA[script]]></col>
          
        </row>
                <row>
                    <col><![CDATA[given]]></col>
                    <col><![CDATA[inventory has 8 pen products]]></col>
          
        </row>
                <row>
                    <col><![CDATA[when]]></col>
                    <col><![CDATA[an order for 8 pen products are placed with the option of shipping all at once]]></col>
          
        </row>
                <row>
                    <col><![CDATA[then]]></col>
                    <col><![CDATA[inventory will have 0 pen products]]></col>
          
        </row>
        
      </table>
      
    </tables>
    
    
    <instructions>
            <instructionResult>
        <instruction><![CDATA[[import_0_0, import, org.givwenzen]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_1_0, make, scriptTableActor, GivWenZenForSlim]]]></instruction>
        <slimResult><![CDATA[OK]]></slimResult>
                <expectation>
          <status>right</status>
          <instructionId>scriptTable_1_0</instructionId>
          <col>1</col>
          <row>1</row>
          <type>ConstructionExpectation</type>
                    <actual><![CDATA[OK]]></actual>
                              <expected><![CDATA[giv wen zen for slim]]></expected>
                              <evaluationMessage><![CDATA[pass(giv wen zen for slim)]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_2_0, call, scriptTableActor, given, inventory has 8 pen products]]]></instruction>
        <slimResult><![CDATA[Exception: <a href=#scriptTable_2_0>scriptTable_2_0</a>]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_0</instructionId>
          <col>1</col>
          <row>1</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_0</instructionId>
          <col>0</col>
          <row>1</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[Exception: <a href=#scriptTable_2_0>scriptTable_2_0</a>]]></actual>
                              <expected><![CDATA[given]]></expected>
                              <evaluationMessage><![CDATA[given]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_2_1, call, scriptTableActor, when, an order for 8 pen products are placed with the option of shipping all at once]]]></instruction>
        <slimResult><![CDATA[Exception: <a href=#scriptTable_2_1>scriptTable_2_1</a>]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_1</instructionId>
          <col>1</col>
          <row>2</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_1</instructionId>
          <col>0</col>
          <row>2</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[Exception: <a href=#scriptTable_2_1>scriptTable_2_1</a>]]></actual>
                              <expected><![CDATA[when]]></expected>
                              <evaluationMessage><![CDATA[when]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
            <instructionResult>
        <instruction><![CDATA[[scriptTable_2_2, call, scriptTableActor, then, inventory will have 0 pen products]]]></instruction>
        <slimResult><![CDATA[Exception: <a href=#scriptTable_2_2>scriptTable_2_2</a>]]></slimResult>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_2</instructionId>
          <col>1</col>
          <row>3</row>
          <type>ArgumentExpectation</type>
                                        <evaluationMessage><![CDATA[]]></evaluationMessage>
                  </expectation>
                <expectation>
          <status>ignored</status>
          <instructionId>scriptTable_2_2</instructionId>
          <col>0</col>
          <row>3</row>
          <type>ScriptActionExpectation</type>
                    <actual><![CDATA[Exception: <a href=#scriptTable_2_2>scriptTable_2_2</a>]]></actual>
                              <expected><![CDATA[then]]></expected>
                              <evaluationMessage><![CDATA[then]]></evaluationMessage>
                  </expectation>
        
      </instructionResult>
      
    </instructions>
    
  </result>
  
  
  <finalCounts>
    <right>0</right>
    <wrong>0</wrong>
    <ignores>0</ignores>
    <exceptions>0</exceptions>
  </finalCounts>
  
</testResults>

